version: '3'
services:
  mysql-server:
    hostname: mysql-server
    container_name: mysql-server
    image: mysql:5.7
    volumes:
      - $HOME/docker/mysql57/conf.d/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - $HOME/docker/mysql57/all/data:/var/lib/mysql
    command: --character-set-server=utf8
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: myphp
      MYSQL_USER: php
      MYSQL_PASSWORD: php-mysql

  redis-server:
    hostname: redis-server
    container_name: redis-server
    image: redis
    ports:
      - 6380:6379
    command: redis-server --appendonly yes --requirepass "!redis-password"

  # 若开启redis密码验证
  # 则需要修改/etc/php-fpm.d/www.conf
  # php_value[session.save_path]    = 'tcp://redis-session:6379?auth=!redis-password'
  redis-session:
    hostname: redis-session
    container_name: redis-session
    image: redis
  #    command: redis-server --appendonly yes --requirepass "!redis-password"

  mongo-server:
    hostname: mongo-server
    container_name: mongo-server
    image: mongo
    ports:
      - 27018:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456

  zookeeper-server:
    hostname: zookeeper-server
    container_name: zookeeper-server
    image: wurstmeister/zookeeper
    ports:
      - 2182:2181
    restart: unless-stopped

  # kafka version: 1.1.0
  # scala version: 2.12
  kafka-server:
    hostname: kafka-server
    container_name: kafka-server
    image: wurstmeister/kafka
    ports:
      - 9093:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka-server
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-server:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "stream-in:1:1,stream-out:1:1"
    depends_on:
      - zookeeper-server

  web-nginx-php56:
    hostname: web-nginx-php56
    container_name: web-nginx-php56
    image: maple52zoe/laravel-php56:4.0
    links:
      - mysql-server
      - redis-server
      - redis-session
      - mongo-server
    ports:
      - 56:80
      - 563:443
    volumes:
      - $HOME/docker/nginx/conf.d:/etc/nginx/conf.d
      - $HOME/docker/nginx/ssl:/etc/nginx/ssl
      - $HOME/docker/nginx/nginx.conf.notcache:/etc/nginx/nginx.conf
      - $HOME/docker/www:/home/data/www
      - $HOME/docker/ini/56/php.ini:/etc/php.ini
    environment:
      DB_SERVER_HOST: 127.0.0.1
      MYSQL_DATABASE: myphp
      MYSQL_USER: php
      MYSQL_PASSWORD: php-mysql
      MYSQL_ROOT_PASSWORD: 123456
      PHP_TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456

  web-nginx-php70:
    hostname: web-nginx-php70
    container_name: web-nginx-php70
    image: maple52zoe/laravel-php70:4.0
    links:
      - mysql-server
      - redis-server
      - redis-session
      - mongo-server
    ports:
      - 70:80
      - 703:443
    volumes:
      - $HOME/docker/nginx/conf.d:/etc/nginx/conf.d
      - $HOME/docker/nginx/ssl:/etc/nginx/ssl
      - $HOME/docker/nginx/nginx.conf.notcache:/etc/nginx/nginx.conf
      - $HOME/docker/www:/home/data/www
      - $HOME/docker/ini/70/php.ini:/etc/php.ini
    environment:
      DB_SERVER_HOST: 127.0.0.1
      MYSQL_DATABASE: myphp
      MYSQL_USER: php
      MYSQL_PASSWORD: php-mysql
      MYSQL_ROOT_PASSWORD: 123456
      PHP_TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456

  web-nginx-php71:
    hostname: web-nginx-php71
    container_name: web-nginx-php71
    image: maple52zoe/laravel-php71:4.0
    links:
      - mysql-server
      - redis-server
      - redis-session
      - mongo-server
    ports:
      - 71:80
      - 713:443
    volumes:
      - $HOME/docker/nginx/conf.d:/etc/nginx/conf.d
      - $HOME/docker/nginx/ssl:/etc/nginx/ssl
      - $HOME/docker/nginx/nginx.conf.notcache:/etc/nginx/nginx.conf
      - $HOME/docker/www:/home/data/www
      - $HOME/docker/ini/71/php.ini:/etc/php.ini
    environment:
      DB_SERVER_HOST: 127.0.0.1
      MYSQL_DATABASE: myphp
      MYSQL_USER: php
      MYSQL_PASSWORD: php-mysql
      MYSQL_ROOT_PASSWORD: 123456
      PHP_TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456

  web-nginx-php72:
    hostname: web-nginx-php72
    container_name: web-nginx-php72
    image: maple52zoe/laravel-php72:3.0
    links:
      - mysql-server
      - redis-server
      - redis-session
      - mongo-server
    ports:
      - 72:80
      - 723:443
    volumes:
      - $HOME/docker/nginx/conf.d:/etc/nginx/conf.d
      - $HOME/docker/nginx/ssl:/etc/nginx/ssl
      - $HOME/docker/nginx/nginx.conf.notcache:/etc/nginx/nginx.conf
      - $HOME/docker/www:/home/data/www
      - $HOME/docker/ini/72/php.ini:/etc/php.ini
    environment:
      DB_SERVER_HOST: 127.0.0.1
      MYSQL_DATABASE: myphp
      MYSQL_USER: php
      MYSQL_PASSWORD: php-mysql
      MYSQL_ROOT_PASSWORD: 123456
      PHP_TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456

  web-nginx-php73:
    hostname: web-nginx-php73
    container_name: web-nginx-php73
    image: maple52zoe/laravel-php73:1.0
    links:
      - mysql-server
      - redis-server
      - redis-session
      - mongo-server
    ports:
      - 73:80
      - 733:443
    volumes:
      - $HOME/docker/nginx/conf.d:/etc/nginx/conf.d
      - $HOME/docker/nginx/ssl:/etc/nginx/ssl
      - $HOME/docker/nginx/nginx.conf.notcache:/etc/nginx/nginx.conf
      - $HOME/docker/www:/home/data/www
      - $HOME/docker/ini/73/php.ini:/etc/php.ini
    environment:
      DB_SERVER_HOST: 127.0.0.1
      MYSQL_DATABASE: myphp
      MYSQL_USER: php
      MYSQL_PASSWORD: php-mysql
      MYSQL_ROOT_PASSWORD: 123456
      PHP_TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
